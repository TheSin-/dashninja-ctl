<?php

/*
    This file is part of TRC Ninja.
    https://github.com/terracoin/trcninja-ctl

    TRC Ninja is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    TRC Ninja is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with TRC Ninja.  If not, see <http://www.gnu.org/licenses/>.

 */

// Copy this files to tmn.config.inc.php and change the values as you wish

// Check we are run part of a script and not standalone
if (!defined('TMN_SCRIPT') || (TMN_SCRIPT !== true)) {
  die("Not executable.\n");
}

// Path and regex to nodes
//  Path to nodes
DEFINE('TMN_PID_PATH','/home/');
//  Username of the p2pool node
DEFINE('TMN_P2POOL_UNAME','p2pool');
//  Prefix for masternode usernames
DEFINE('TMN_PID_PREFIX','tmn');
//  Regex for masternode usernames
DEFINE('TMN_PID_REGEX',"/tmn(\d\d*)/");

// Default path to terracoind
DEFINE('TMN_TERRACOIND_DEFAULT','/usr/local/bin/terracoind');

// How much to wait for start/stop before giving up (in seconds)
DEFINE('TMN_STOPWAIT',10);

// Nice level for mainnet and testnet nodes
DEFINE('TMN_NICELEVEL_MAIN',10);
DEFINE('TMN_NICELEVEL_TEST',18);

// How many successive times a node can be notresponding before force-stop or restart
DEFINE('TMN_NRCOUNT',3);
DEFINE('TMN_NRCOUNT_TEST',6);
// Where to store the counter file
DEFINE('TMN_NRCOUNTDIR','/tmp/');
// Log NRs
DEFINE('TMN_NRCOUNTLOG','/var/log/tmn/nrcount.log');

// Parallel threads (for start-stop and RPC commands)
DEFINE('TMN_THREADS_MAX',8);

// Semaphores
//   ctl auto status
DEFINE('TMN_CTLSTATUSAUTO_SEMAPHORE','/var/run/tmnctlstatusauto%d.pid');
//   dbgen
DEFINE('TMN_DBGEN_SEMAPHORE','/var/run/tmndbgen.pid');

// Port checker specifics
//  Semaphore for multi-threading (only allow 1 instance)
DEFINE('TMN_PORTCHECK_SEMAPHORE','/var/run/tmnportcheck.pid');
//  Time-out for checking port after this number of seconds
DEFINE('TMN_PORTCHECK_TIMEOUT',4);
//  Interval between checks for a node (in seconds)
DEFINE('TMN_PORTCHECK_INTERVAL',3600);

// Balancer retriever specifics
//  Semaphore file (only allow 1 instance)
DEFINE('TMN_BALANCE_SEMAPHORE','/var/run/tmnbalance.pid');
//  Interval between balance retrieval for a pubkey (in seconds)
DEFINE('TMN_BALANCE_INTERVAL',900);
//  URL for testnet balance retrieval (abe explorer API)
DEFINE('TMN_BALANCE_URL_TESTNET','http://127.0.0.1:3002/api/addr/%%p%%/balance');
//  URL for mainnet balance retrieval (abe explorer API)
DEFINE('TMN_BALANCE_URL_MAINNET','http://127.0.0.1:3001/api/addr/%%p%%/balance');

// Block Parser specifics
//  Semaphore file (only allow 1 instance)
DEFINE('TMN_BLOCKPARSER_SEMAPHORE','/var/run/tmnblockparser.pid');
//  Activate archival (if disabled files are deleted once consumed)
DEFINE('TMN_BLOCKPARSER_ARCHIVE_DO',false);
//  Folder to archive json files (username subfolders will be created)
DEFINE('TMN_BLOCKPARSER_ARCHIVE','/home/terracoin-blkhist/archive/current/');
//  Folder to archive longterm (multiple json files together per username)
DEFINE('TMN_BLOCKPARSER_ARCHIVE_LONGTERM','/home/terracoin-blkhist/archive/longterm/');
//  Minimum number of files to tar together for longterm archiving
DEFINE('TMN_BLOCKPARSER_ARCHIVE_LONGTERM_MIN',576);

// Third parties fetching configuration
//  TRC Whale partner ID
DEFINE('TMN_TRCWHALE_PARTNERID', '000000000000');

// Auto-Update URLs
//  Testnet binary (Terracoin server)
DEFINE('TMN_AUTOUPDATE_TEST','https://terracoin.io/bin/terracoin-core-current/terracoin-0.12.2-x86_64-linux-gnu.tar.gz');
//  Semaphore
DEFINE('TMN_AUTOUPDATE_SEMAPHORE','/var/run/tmnautoupdate.pid');

// Command Download specifics
//  Download folder
DEFINE('TMN_CDL_DIR','/var/www/terracoin/download/');
//  Download URL
DEFINE('TMN_CDL_URL','https://cdl.yourdomain.tk/');

// Direct access to DB (should not be used)
DEFINE('TMNCTLMYSQLUSER','trc-mnninja-com');
DEFINE('TMNCTLMYSQLPASS','yourrandompassword');
DEFINE('TMNCTLMYSQLDATABASE','trc_ninja');
DEFINE('TMNCTLMYSQLHOST','localhost');

// Webservice configuration
//  Public API end-point
define('TMN_URL_API','https://yourdomain.tk/api');
//  Private API end-point
define('TMN_URL_CMD','https://cmd.yourdomain.tk');
//  Private API SSL configuration (you need a CA, certificate and private key for this hub client)
define('TMN_SSL_CAINFO','/usr/share/ca-certificates/yourdomain.tk/TRCNinja_CA_Root.crt');
define('TMN_SSL_CERT','/etc/ssl/private/hub01.cmd.yourdomain.tk.crt');
define('TMN_SSL_KEY','/etc/ssl/private/hub01.cmd.yourdomain.tk.key');
//  Private API interface to use
define('TMN_INTERFACE','::1');
//  first 2 digits of RPC port
define('TMNCTLRPCPORTVAL',10);

// Indicate the configuration was loaded
DEFINE('TMN_CONFIG',true);

?>
